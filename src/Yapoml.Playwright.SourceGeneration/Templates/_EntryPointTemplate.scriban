# pragma warning disable
// auto-generated by {{version}}

namespace {{root_namespace}}
{
	[global::System.Runtime.CompilerServices.CompilerGenerated]
	public partial class YaSpace : global::Yapoml.Playwright.Components.BaseSpace<YaSpace>
	{
		public YaSpace(YaSpace parentSpace, global::Microsoft.Playwright.IPage driver, global::Yapoml.Framework.Options.ISpaceOptions spaceOptions)
			: base(parentSpace, driver, spaceOptions)
		{
			
		}

{{ for space in spaces }}
		{{ include 'SpaceTemplate_Desc' space}}
		public global::{{space.namespace}}.{{space.name}}Space {{space.name}}
			=> _spaceOptions.Services.Get<global::Yapoml.Playwright.Services.Factory.ISpaceFactory>().Create<global::{{space.namespace}}.{{space.name}}Space>(this, _driver, _spaceOptions);
{{ end }}
{{ for page in pages }}
		/// <summary>
		/// Consists of the following page components:
		/// <list type="bullet">
		{{ for c in page.components -}}
		/// <item>
		///   <description>{{ if c.is_plural }}List of {{ end }}{{ c.name }}</description>
		/// </item>
		{{ end -}}
		/// </list>
		/// </summary>
		public {{ get_page_class_name_for_page page }} {{get_page_accessor_name page.name}}
			=> _spaceOptions.Services.Get<global::Yapoml.Playwright.Services.Factory.IPageFactory>().Create<{{ get_page_class_name_for_page page }}>(_driver, new global::Yapoml.Playwright.Services.Locator.ElementHandlerRepository(), new global::Yapoml.Playwright.Components.Metadata.PageMetadata { Name = "{{ page.name }}"}, _spaceOptions);
{{ end }}
	}

	/// <summary>
	/// Provides entry points to access page components within Yapoml.
	/// </summary>
	[global::System.Runtime.CompilerServices.CompilerGenerated]
	public static class YapomlExtensions
	{
		/// <summary>
		/// Entry point to access page components within Yapoml.
		/// </summary>
		public static YaSpace Ya(this global::Microsoft.Playwright.IPage driver) => driver.Ya((options) => { });

		/// <summary>
		/// Entry point to access page components within Yapoml.
		/// <example>
		/// For example:
		/// <code>
		/// driver.Ya(opts => opts.WithBaseUrl("https://sut.com"));
		/// </code>
		/// </example>
		/// </summary>
		public static YaSpace Ya(this global::Microsoft.Playwright.IPage driver, global::System.Action<global::Yapoml.Framework.Options.ISpaceOptions> spaceOptionsCallback)
		{
			var spaceOptions = new global::Yapoml.Framework.Options.SpaceOptions();

			// default logger
			var logger = new global::Yapoml.Framework.Logging.Logger();
			spaceOptions.Services.Register<global::Yapoml.Framework.Logging.ILogger>(logger);
			var consoleLoggerSink = new global::Yapoml.Framework.Logging.Sinks.ConsoleLoggerSink(logger);

			// default factories
			spaceOptions.Services.Register<global::Yapoml.Playwright.Services.Factory.ISpaceFactory>(new global::Yapoml.Playwright.Services.Factory.DefaultSpaceFactory());
			spaceOptions.Services.Register<global::Yapoml.Playwright.Services.Factory.IPageFactory>(new global::Yapoml.Playwright.Services.Factory.DefaultPageFactory());
			spaceOptions.Services.Register<global::Yapoml.Playwright.Services.Factory.IComponentFactory>(new global::Yapoml.Playwright.Services.Factory.DefaultComponentFactory());
			spaceOptions.Services.Register<global::Yapoml.Playwright.Services.Factory.IElementsListHandlerFactory>(new global::Yapoml.Playwright.Services.Factory.DefaultElementsListHandlerFactory());

			spaceOptions.Services.Register<global::Yapoml.Playwright.Options.TimeoutOptions>(new global::Yapoml.Playwright.Options.TimeoutOptions(global::System.TimeSpan.FromSeconds(30), global::System.TimeSpan.FromMilliseconds(200)));

			spaceOptions.Services.Register<global::Yapoml.Playwright.Services.Locator.IElementLocator>(new global::Yapoml.Playwright.Services.Locator.DefaultElementLocator());

			spaceOptions.Services.Register<global::Yapoml.Playwright.Events.IEventSource>(new global::Yapoml.Playwright.Events.EventSource());

			var logProducer = new global::Yapoml.Playwright.Events.LogEventsProducer(spaceOptions);
			logProducer.Init();

			spaceOptionsCallback?.Invoke(spaceOptions);

			var yaSpace = new YaSpace(null, driver, spaceOptions);
			spaceOptions.Services.Register(yaSpace);

			return yaSpace;
		}
	}
}
# pragma warning restore